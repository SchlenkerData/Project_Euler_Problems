
# coding: utf-8

# # Project Euler Problem 2
# 
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
# 

# In[2]:


# We initialize a list called "fiblist" that will store
# all elements of the Fibonacci sequence up to 4 million.
# Then, we go through that list and sum the even elements.
# That sum gets stored in "sumval".

fiblist = [1, 2]
sumval = 0

nextfib = 0
while nextfib < 4000000:
    nextfib = fiblist[-1] + fiblist[-2]
    if nextfib < 4000000:
        fiblist.append(nextfib)
        
for i in fiblist:
    if i % 2 == 0:
        sumval += i
        
print(sumval)

